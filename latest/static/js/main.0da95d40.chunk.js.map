{"version":3,"sources":["fft.ts","utils.ts","Random.ts","airglow.ts","Footer.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["free","t","Array","from","length","forEach","_","i","delete","fftOneChannel","src","optimalRows","cv","getOptimalDFTSize","rows","optimalCols","cols","padded","Mat","s0","Scalar","all","copyMakeBorder","BORDER_CONSTANT","plane0","convertTo","CV_32F","planes","MatVector","complexI","plane1","zeros","push_back","merge","dft","ifftOneChannel","p","idft","DFT_SCALE","split","result","get","fft2Image","image","a","matFromImageData","channels","output","map","ifft2Image","input","width","height","ch","CV_8UC4","cvtColor","COLOR_RGB2RGBA","imageData","ImageData","Uint8ClampedArray","data","swap","arr","j","getCurrentVersion","versionNumber","process","tmp","window","location","pathname","s","startsWith","v","slice","compareVersion","b","regex","aa","exec","bb","x","parseInt","y","getContext","canvas","ctx","Error","UINT32_MAX","RNG","seed","c","d","this","setState","state","undefined","makeSeed","splitMix32","Math","floor","random","r","hash","charCodeAt","hashCode","Date","now","z","shuffleWatermark","rng","shuffleMap","getPermutation","newData","k","putWatermarks","original","secret","nWatermarks","nRows","nCols","putImageData","makeWatermark","document","createElement","getImageData","shuffledData","mix","args","addWeighted","alpha","separate","encoded","encode","secretKey","nWatermark","logger","trim","watermark","fftOriginal","fftWatermark","fftEncoded","decodeWatermark","getScaled","drawImage","decode","encodedScaled","decoded","Footer","props","onVersionSelectedHandler","onVersionSelected","bind","currentVersion","versionList","fetch","response","text","content","sorted","filter","sort","join","console","warn","fetchVersionList","e","version","target","value","selectedIndex","className","href","onChange","React","App","canvases","onDismissAlert","dismissAlert","onLogger","onEncode","onDecode","logging","isWorking","alertType","formData","images","progress","status","app","type","current","clearCanvas","fileInput","files","updateImage","file","Image","reader","FileReader","onload","onloadend","toString","readAsDataURL","stack","Promise","resolve","error","log","setTimeout","preventDefault","dataURL","toDataURL","title","w","open","img","body","appendChild","event","typeName","parseFloat","err","message","ctxOriginal","originalImage","encodeDisabled","decodeDisabled","maxWatermarks","role","style","display","data-dismiss","aria-label","onClick","aria-hidden","ref","onChangeFile","htmlFor","id","min","max","onChangeFormData","disabled","onDownload","key","clearRect","isLocalhost","Boolean","hostname","match","register","navigator","URL","origin","addEventListener","swUrl","then","headers","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onOpenCVReady","ReactDOM","getElementById","registerServiceWorker"],"mappings":"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","file":"static/js/main.0da95d40.chunk.js","sourcesContent":["export type Tensor = [cv.Mat, cv.Mat, cv.Mat]\n\nexport const free = (t: Tensor): void => Array.from({ length: 3 }).forEach((_, i) => t[i].delete())\n\nconst fftOneChannel = (src: cv.Mat): cv.Mat => {\n  const optimalRows = cv.getOptimalDFTSize(src.rows)\n  const optimalCols = cv.getOptimalDFTSize(src.cols)\n  const padded = new cv.Mat()\n  const s0 = cv.Scalar.all(0)\n  cv.copyMakeBorder(src, padded, 0, optimalRows - src.rows, 0,\n    optimalCols - src.cols, cv.BORDER_CONSTANT, s0)\n\n  const plane0 = new cv.Mat()\n  padded.convertTo(plane0, cv.CV_32F)\n  const planes = new cv.MatVector()\n  const complexI = new cv.Mat()\n  const plane1 = new cv.Mat.zeros(padded.rows, padded.cols, cv.CV_32F)\n  planes.push_back(plane0)\n  planes.push_back(plane1)\n  cv.merge(planes, complexI)\n\n  cv.dft(complexI, complexI)\n\n  padded.delete()\n  plane0.delete()\n  plane1.delete()\n  planes.delete()\n  return complexI\n}\n\nconst ifftOneChannel = (src: cv.Mat): cv.Mat => {\n  const p = new cv.Mat()\n  cv.idft(src, p, cv.DFT_SCALE)\n  const planes = new cv.MatVector()\n  cv.split(p, planes)\n  const result = planes.get(0)\n  planes.delete()\n  return result\n}\n\n// eslint-disable-next-line @typescript-eslint/require-await\nexport const fft2Image = async (image: ImageData): Promise<Tensor> => {\n  const src = cv.matFromImageData(image)\n  const channels = new cv.MatVector()\n  cv.split(src, channels)\n  const output = Array.from({ length: 3 }).map((_, i) => fftOneChannel(channels.get(i))) as Tensor\n  return output\n}\n\n// eslint-disable-next-line @typescript-eslint/require-await,@typescript-eslint/no-unused-vars\nexport const ifft2Image = async (input: Tensor, width: number, height: number): Promise<ImageData> => {\n  const channels = new cv.MatVector()\n  for (const ch of input) {\n    const t = ifftOneChannel(ch)\n    channels.push_back(t)\n    t.delete()\n  }\n  const output = new cv.Mat()\n  const result = new cv.Mat()\n  cv.merge(channels, output)\n  output.convertTo(result, cv.CV_8UC4)\n  cv.cvtColor(result, result, cv.COLOR_RGB2RGBA)\n  const imageData = new ImageData(new Uint8ClampedArray(result.data), result.cols, result.rows)\n  channels.delete()\n  output.delete()\n  result.delete()\n  return imageData\n}\n","export const swap = (arr: number[] | Uint8ClampedArray, i: number, j: number): void => {\n  const t = arr[i]\n  arr[i] = arr[j]\n  arr[j] = t\n}\n\nexport type AlertType = 'primary' | 'danger' | 'success'\n\nexport type Logger = (progress: number, status: string, alertType?: AlertType) => Promise<void>\n\nexport const getCurrentVersion = (): string => {\n  const versionNumber = process.env.REACT_APP_VERSION || '0.0.0'\n  const tmp = window.location.pathname.split('/')\n  if (tmp.length > 1) {\n    const s = tmp[1]\n    if (s === 'latest') {\n      return s\n    } else if (s.startsWith('v')) {\n      const v = s.slice(1)\n      if (!versionNumber.startsWith(v)) {\n        return '???'\n      }\n    }\n  }\n  return versionNumber\n}\n\nexport const compareVersion = (a: string, b: string): number => {\n  if (a === 'latest') {\n    return -1\n  } else if (b === 'latest') {\n    return 1\n  }\n  const regex = /^(\\d+)\\.(\\d+)\\.(\\d+)$/\n  const aa = regex.exec(a) || ['0', '0', '0', '0']\n  const bb = regex.exec(b) || ['0', '0', '0', '0']\n  for (const i of [1, 2, 3]) {\n    const x = parseInt(aa[i], 10)\n    const y = parseInt(bb[i], 10)\n    if (x > y) {\n      return -1\n    } else if (x < y) {\n      return 1\n    }\n  }\n  return 0\n}\n\nexport const getContext = (canvas: HTMLCanvasElement | null): CanvasRenderingContext2D => {\n  const ctx = canvas?.getContext('2d')\n  if (!ctx) {\n    throw new Error('No 2D context.')\n  }\n  return ctx\n}\n\nexport const isDevelopment = process.env.NODE_ENV === \"development\"","/*\n * xoshiro128** random number generator.\n * http://prng.di.unimi.it\n */\n\n/* eslint-disable no-bitwise */\n\nimport { swap } from './utils'\n\nconst UINT32_MAX = 4294967296\n\nexport interface IRandomState {\n  a: number\n  b: number\n  c: number\n  d: number\n}\n\nexport type RandomSeed = IRandomState | number | string\n\nexport class RNG {\n\n  public static hashCode(s: string): number {\n    let hash = 0\n    if (s.length === 0) {\n      return hash\n    }\n    for (let i = 0; i < s.length; i++) {\n      const chr = s.charCodeAt(i)\n      hash = ((hash << 5) - hash) + chr\n      hash %= UINT32_MAX\n    }\n    return hash\n  }\n\n  public static makeSeed(state?: number | string): number {\n    if (typeof state === 'number') {\n      return state % UINT32_MAX\n    } else if (typeof state === 'string') {\n      return RNG.hashCode(state) % UINT32_MAX\n    }\n    return Date.now() % UINT32_MAX\n  }\n\n  public static splitMix32(x: [number]): number {\n    x[0] = (x[0] + 0x9e3779b9) % UINT32_MAX\n    let z = x[0]\n    z = ((z ^ (z >>> 16)) * 0x85ebca6b) % UINT32_MAX\n    z = ((z ^ (z >>> 13)) * 0xc2b2ae35) % UINT32_MAX\n    return (z ^ (z >>> 16)) % UINT32_MAX\n  }\n\n  private s: IRandomState = {a: 0, b: 0, c: 0, d: 0}\n\n  constructor(seed?: RandomSeed) {\n    this.setState(seed)\n  }\n\n  public setState(state?: RandomSeed): void {\n    if (state === undefined || typeof state !== 'object') {\n      const seed: [number] = [RNG.makeSeed(state)]\n      const a = RNG.splitMix32(seed)\n      const b = RNG.splitMix32(seed)\n      const c = RNG.splitMix32(seed)\n      const d = RNG.splitMix32(seed)\n      state = {a, b, c, d}\n    }\n    this.s = state\n  }\n\n  public getState(): IRandomState {\n    return this.s\n  }\n\n  public getPermutation(length: number): number[] {\n    const arr = Array.from({ length }, (_, i) => i)\n    while (length > 1) {\n      length -= 1\n      const j = Math.floor(this.random() * length)\n      swap(arr, length, j)\n    }\n    return arr\n  }\n\n  public random(): number {\n    const s = this.s\n    const t = s.b << 9\n    let r = s.a * 5\n    r = ((r << 7) | (r >>> 25)) * 9\n    s.c ^= s.a\n    s.d ^= s.b\n    s.b ^= s.c\n    s.a ^= s.d\n    s.c ^= t\n    s.d = (s.d << 11) | (s.d >>> 21)\n    return (r >>> 0) / UINT32_MAX\n  }\n}\n","import { fft2Image, free, ifft2Image, Tensor } from './fft'\n\nimport { RNG } from './Random'\nimport { getContext, Logger } from './utils'\n\nexport const getMaxWatermarks = (original: HTMLImageElement | null, secret: HTMLImageElement | null): number => {\n  if (original === null || secret === null) {\n    return 0\n  }\n  const nRows = Math.floor(original.height / 2 / secret.height)\n  const nCols = Math.floor(original.width / secret.width)\n  return nRows * nCols\n}\n\nconst shuffleWatermark = (data: ImageData, rng: RNG): ImageData => {\n  const length = Math.floor(data.data.length / 4)\n  const shuffleMap = rng.getPermutation(Math.floor(length / 2))\n  const newData = new ImageData(data.data.slice(), data.width, data.height)\n  shuffleMap.forEach((v, i) => {\n    for (let k = 0; k < 4; ++k) {\n      newData.data[i * 4 + k] = data.data[v * 4 + k]\n      newData.data[(length - 1 - i) * 4 + k] = data.data[v * 4 + k]\n    }\n  })\n  return newData\n}\n\nconst putWatermarks = (\n  canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D,\n  original: ImageData, secret: ImageData, nWatermarks: number\n): void => {\n  const nRows = Math.floor(original.height / 2 / secret.height)\n  const nCols = Math.floor(original.width / secret.width)\n  if (nRows === 0 || nCols === 0) {\n    throw new Error(`Secret image is too large: use an image whose width <= ${ original.width } and` +\n      ` height <= ${ Math.floor(original.height / 2) }`)\n  }\n  const { width, height } = secret\n  for (let i = 0; i < nRows; ++i) {\n    for (let j = 0; j < nCols; ++j) {\n      nWatermarks -= 1\n      if (nWatermarks < 0) {\n        return\n      }\n      ctx.putImageData(secret, j * width, i * height)\n    }\n  }\n}\n\nconst makeWatermark = (original: ImageData, secret: ImageData, rng: RNG, nWatermarks = 1): ImageData => {\n  const canvas = document.createElement('canvas')\n  const { width, height } = original\n  canvas.width = width\n  canvas.height = height\n  const ctx = getContext(canvas)\n  putWatermarks(canvas, ctx, original, secret, nWatermarks)\n  const data = ctx.getImageData(0, 0, width, height)\n  const shuffledData = shuffleWatermark(data, rng)\n  return shuffledData\n}\n\ninterface MixArguments {\n  alpha: number\n}\n\nconst mix = (original: Tensor, secret: Tensor, args: MixArguments): Tensor => {\n  return original.map((x, i) => {\n      const t = new cv.Mat()\n      cv.addWeighted(secret[i], args.alpha, x, 1, 0, t)\n      return t\n    }\n  ) as Tensor\n}\n\nconst separate = (original: Tensor, encoded: Tensor, args: MixArguments): Tensor => {\n  return original.map((x, i) => {\n    const t = new cv.Mat()\n    cv.addWeighted(encoded[i], 1, x, -1, 0, t)\n    cv.addWeighted(t, args.alpha, t, 0, 0, t)\n    return t\n  }) as Tensor\n}\n\nexport const encode = async (\n  original: ImageData, secret: ImageData,\n  secretKey: string, nWatermark: number, alpha: number,\n  logger: Logger\n): Promise<ImageData> => {\n  await logger(0, 'Initializing')\n  secretKey = secretKey.trim()\n  if (secretKey === '') {\n    throw new Error('Secret key cannot be empty')\n  }\n  await logger(5, 'Making watermarks')\n  const rng = new RNG(secretKey)\n  const watermark = makeWatermark(original, secret, rng, nWatermark)\n  await logger(20, 'Calculating the frequency domain of original image')\n  const fftOriginal = await fft2Image(original)\n  await logger(40, 'Calculating the frequency domain of watermarks')\n  const fftWatermark = await fft2Image(watermark)\n  await logger(60, 'Calculating the frequency domain of encoded image')\n  const fftEncoded = mix(fftOriginal, fftWatermark, { alpha })\n  await logger(80, 'Calculating the resulting image')\n  const encoded = await ifft2Image(fftEncoded, original.width, original.height)\n  await logger(100, 'Finished!', 'success')\n  free(fftOriginal)\n  free(fftWatermark)\n  free(fftEncoded)\n  return encoded\n}\n\nexport const decodeWatermark = (watermark: ImageData, rng: RNG): ImageData => {\n  const length = Math.floor(watermark.data.length / 4)\n  const shuffleMap = rng.getPermutation(Math.floor(length / 2))\n  const data = new ImageData(watermark.data.slice(), watermark.width, watermark.height)\n  shuffleMap.forEach((v, i) => {\n    for (let k = 0; k < 4; ++k) {\n      data.data[v * 4 + k] = watermark.data[i * 4 + k]\n      data.data[(length - 1 - v) * 4 + k] = watermark.data[(length - 1 - i) * 4 + k]\n    }\n  })\n  return data\n}\n\nexport const getScaled = (encoded: HTMLImageElement, original: ImageData): ImageData => {\n  const canvas = document.createElement('canvas')\n  const { width, height } = original\n  canvas.width = width\n  canvas.height = height\n  const ctx = getContext(canvas)\n  ctx.drawImage(encoded, 0, 0, width, height)\n  const scaled = ctx.getImageData(0, 0, width, height)\n  return scaled\n}\n\nexport const decode = async (\n  original: ImageData, encoded: HTMLImageElement,\n  secretKey: string, alpha: number,\n  logger: Logger\n): Promise<ImageData> => {\n  await logger(0, 'Initializing')\n  secretKey = secretKey.trim()\n  if (secretKey === ''\n  ) {\n    throw new Error('Secret key cannot be empty')\n  }\n  await logger(5, 'Calculating the frequency domain of original image')\n  const fftOriginal = await fft2Image(original)\n  await logger(20, 'Scaling the encoded image')\n  const encodedScaled = getScaled(encoded, original)\n  await logger(30, 'Calculating the frequency domain of encoded image')\n  const fftEncoded = await fft2Image(encodedScaled)\n  await logger(45, 'Calculating the frequency domain of watermarks')\n  const fftWatermark = separate(fftOriginal, fftEncoded, { alpha })\n  await logger(60, 'Calculating the watermarks image')\n  const watermark = await ifft2Image(fftWatermark, original.width, original.height)\n  await logger(80, 'Calculating the resulting image')\n  const rng = new RNG(secretKey)\n  const decoded = decodeWatermark(watermark, rng)\n  await logger(100, 'Finished!', 'success')\n  free(fftOriginal)\n  free(fftWatermark)\n  free(fftEncoded)\n  return decoded\n}\n","import 'bootstrap/dist/css/bootstrap.min.css'\n\nimport * as React from 'react'\n\nimport './Footer.css'\n\nimport { compareVersion, getCurrentVersion, isDevelopment } from './utils'\n\ninterface IFooterState {\n  versionList: string[]\n  currentVersion: string\n}\n\nexport default class Footer extends React.Component<Record<string, never>, IFooterState> {\n  private onVersionSelectedHandler = this.onVersionSelected.bind(this)\n\n  constructor(props: Record<string, never>) {\n    super(props)\n    const currentVersion = getCurrentVersion()\n    this.state = {\n      currentVersion,\n      versionList: [\n        'latest',\n        currentVersion\n      ],\n    }\n  }\n\n  private async fetchVersionList(): Promise<void> {\n    if (isDevelopment) {\n      return\n    }\n    try {\n      const response = await fetch('/VERSIONS')\n      const content = await response.text()\n      const sorted = content.split('\\n')\n        .filter((x) => x.trim() !== '')\n        .map((x) => x.startsWith('v') ? x.slice(1) : x)\n        .sort(compareVersion)\n      const versionList = sorted.filter((x, i) => i < 2 ||\n        !x.startsWith(sorted[i - 1].split('.').slice(0, -1).join('.'))\n      )\n      this.setState({\n        versionList\n      })\n    } catch {\n      // eslint-disable-next-line no-console\n      console.warn('Unable to fetch the version list.')\n    }\n  }\n\n  public componentDidMount(): void {\n    void this.fetchVersionList()\n  }\n\n  private onVersionSelected(e: React.ChangeEvent<HTMLSelectElement>): void {\n    const version = e.target.value\n    if (e.target && e.target.selectedIndex === 1) {\n      window.location.pathname = '/stable'\n    } else if (version === 'latest') {\n      window.location.pathname = '/latest'\n    } else {\n      window.location.pathname = `/v${ version }`\n    }\n  }\n\n  public render(): JSX.Element {\n    return <footer className=\"footer mt-auto py-3\">\n      <div className=\"footer-container container\">\n        <div className=\"text-muted footer-block\">By <a href=\"https://vilja.me\">Vilja</a> @ <a\n          href=\"https://github.com/commoon\">Commoon Labs</a>.&nbsp;</div>\n        <div className=\"text-muted footer-block\">Source code on <a\n          href={ process.env.REACT_APP_REPOSITORY }>GitHub</a>.&nbsp;</div>\n        <div className=\"footer-block\">\n          <span className=\"text-muted\">Version: </span>\n          <select className=\"custom-select custom-select-sm\"\n                  value={ this.state.currentVersion } onChange={ this.onVersionSelectedHandler }>\n            { this.state.versionList.map((version, i) => <option key={ i }\n                                                                 value={ version }>{ version + (i === 1 ? ' (stable)' : '') }</option>) }\n          </select>\n        </div>\n      </div>\n    </footer>\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css'\n\nimport * as React from 'react'\n\nimport './App.css'\n\nimport { decode, encode, getMaxWatermarks } from './airglow'\nimport { getCurrentVersion, AlertType, getContext } from './utils'\n\nimport Footer from './Footer'\n\ninterface IAppFormData {\n  secretKey: string\n  alpha: string\n  nWatermarks: string\n}\n\ninterface IAppState {\n  alertType: AlertType | null\n  formData: IAppFormData\n  images: {\n    encoded: HTMLImageElement | null\n    original: HTMLImageElement | null\n    secret: HTMLImageElement | null\n  }\n  progress: number\n  status: string\n}\n\ntype ImageType = 'original' | 'secret' | 'encoded'\n\nclass App extends React.Component<Record<string, never>, IAppState> {\n\n  private static clearCanvas(canvas: HTMLCanvasElement): void {\n    canvas.width = 10\n    canvas.height = 10\n    const ctx = getContext(canvas)\n    ctx.clearRect(0, 0, 10, 10)\n  }\n\n  public canvases = {\n    encoded: React.createRef<HTMLCanvasElement>(),\n    original: React.createRef<HTMLCanvasElement>(),\n    secret: React.createRef<HTMLCanvasElement>()\n  }\n\n  public onDismissAlert = this.dismissAlert.bind(this)\n  public onLogger = this.logger.bind(this)\n  public onEncode = this.encode.bind(this)\n  public onDecode = this.decode.bind(this)\n\n  private logging: (() => void) | null = null\n  private isWorking = false\n\n  public constructor(props: Record<string, never>) {\n    super(props)\n    this.state = {\n      alertType: null,\n      formData: {\n        alpha: '1',\n        nWatermarks: '1',\n        secretKey: 'Airglow'\n      },\n      images: {\n        encoded: null,\n        original: null,\n        secret: null\n      },\n      progress: 0,\n      status: ''\n    }\n    window.app = this\n  }\n\n  public dismissAlert(): void {\n    this.setState({ alertType: null, status: '' })\n  }\n\n  public updateImage(type: ImageType, image: HTMLImageElement | null): void {\n    const images = this.state.images\n    images[type] = image\n    this.setState({\n      images\n    })\n  }\n\n  public onChangeFile(type: ImageType): (e: React.ChangeEvent<HTMLInputElement>) => void {\n    return (e: React.ChangeEvent<HTMLInputElement>) => {\n      const canvas = this.canvases[type].current\n      if (canvas === null) {\n        return\n      }\n      App.clearCanvas(canvas)\n      const fileInput = e.target as HTMLInputElement\n      const files = fileInput.files\n      if (files === null || files.length < 1) {\n        this.updateImage(type, null)\n        return\n      }\n      const file = files[0]\n      const image = new Image()\n      const reader = new FileReader()\n      image.onload = () => {\n        canvas.width = image.width\n        canvas.height = image.height\n        const ctx = getContext(canvas)\n        ctx.drawImage(image, 0, 0)\n        this.updateImage(type, image)\n      }\n      reader.onloadend = () => {\n        if (reader.result !== null) {\n          image.src = reader.result.toString()\n        }\n      }\n      reader.readAsDataURL(file)\n      fileInput.value = ''\n    }\n  }\n\n  public logger(progress: number | null, status: string, alertType: AlertType = 'primary', stack?: string): Promise<void> {\n    return new Promise<void>(resolve => {\n      if (alertType === 'danger') {\n        // eslint-disable-next-line no-console\n        console.error(stack === undefined ? status : stack)\n      } else {\n        // eslint-disable-next-line no-console\n        console.log(status)\n      }\n      this.logging = () => {\n        resolve()\n      }\n      if (progress === null) {\n        progress = this.state.progress\n      }\n      this.setState({\n        alertType,\n        progress,\n        status\n      })\n    })\n  }\n\n  public componentDidUpdate(): void {\n    if (this.logging !== null) {\n      const t = this.logging\n      this.logging = null\n      setTimeout(t, 300)\n    }\n  }\n\n  public onDownload(type: ImageType): (e: React.MouseEvent<HTMLButtonElement>) => void {\n    return (e: React.MouseEvent<HTMLButtonElement>) => {\n      e.preventDefault()\n      const canvas = this.canvases[type].current\n      if (canvas === null) {\n        return\n      }\n      const dataURL = canvas.toDataURL('image/png')\n      const title = `${ type }.png`\n      const w = window.open('about:blank', title)\n      if (!w) {\n        throw Error('Cannot download.')\n      }\n      w.document.title = title\n      const img = w.document.createElement('img')\n      img.src = dataURL\n      w.document.body.appendChild(img)\n    }\n  }\n\n  public async encode(event: React.MouseEvent<HTMLButtonElement>): Promise<void> {\n    event.preventDefault()\n    if (this.isWorking) {\n      return\n    }\n    this.isWorking = true\n    const { secretKey, alpha, nWatermarks } = this.state.formData\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-assignment\n    const data: { [type in ImageType]: ImageData } = {} as any\n    for (const typeName of ['original', 'secret']) {\n      const type = typeName as ImageType\n      const ctx = getContext(this.canvases[type].current)\n      const img = this.state.images[type]\n      if (img === null) {\n        return\n      }\n      data[type] = ctx.getImageData(0, 0, img.width, img.height)\n    }\n    const canvas = this.canvases.encoded.current\n    if (!canvas) {\n      throw new Error('Not initialized.')\n    }\n    App.clearCanvas(canvas)\n    try {\n      const result = await encode(\n        data.original, data.secret,\n        secretKey,\n        parseInt(nWatermarks, 10), parseFloat(alpha) / 100,\n        this.onLogger\n      )\n      canvas.width = result.width\n      canvas.height = result.height\n      const ctx = getContext(canvas)\n      ctx.putImageData(result, 0, 0)\n      const image = document.createElement('img')\n      image.onload = () => this.updateImage('encoded', image)\n      image.src = canvas.toDataURL('image/png')\n    } catch (e) {\n      const err = e as Error\n      await this.logger(null, err.message, 'danger', err.stack)\n    }\n    this.isWorking = false\n  }\n\n  public async decode(event: React.MouseEvent<HTMLButtonElement>): Promise<void> {\n    event.preventDefault()\n    if (this.isWorking) {\n      return\n    }\n    this.isWorking = true\n    const { alpha, secretKey } = this.state.formData\n    const ctxOriginal = getContext(this.canvases.original.current)\n    const originalImage = this.state.images.original\n    if (originalImage === null) {\n      return\n    }\n    const original = ctxOriginal.getImageData(0, 0, originalImage.width, originalImage.height)\n    const encoded = this.state.images.encoded\n    if (encoded === null) {\n      return\n    }\n    const canvas = this.canvases.secret.current\n    if (!canvas) {\n      throw new Error('No canvas.')\n    }\n    App.clearCanvas(canvas)\n    try {\n      const result = await decode(\n        original, encoded, secretKey,\n        parseFloat(alpha) / 100, this.onLogger\n      )\n      canvas.width = result.width\n      canvas.height = result.height\n      const ctx = getContext(canvas)\n      ctx.putImageData(result, 0, 0)\n      const image = document.createElement('img')\n      image.onload = () => this.updateImage('secret', image)\n      image.src = canvas.toDataURL('image/png')\n    } catch (e) {\n      const err = e as Error\n      await this.logger(null, err.message, 'danger', err.stack)\n    }\n    this.isWorking = false\n  }\n\n  public render(): JSX.Element {\n    const { alertType, formData, images, progress, status } = this.state\n    const encodeDisabled = images.original === null || images.secret === null || formData.secretKey.trim() === ''\n    const decodeDisabled = images.encoded === null || images.original === null || formData.secretKey.trim() === ''\n    const maxWatermarks = getMaxWatermarks(images.original, images.secret)\n    return (<div className=\"App\">\n      <form className=\"airglow-form container-fluid\">\n        <h1>Airglow ({ getCurrentVersion() })</h1>\n        <div className={ 'alert alert-dismissible fade show' + (alertType !== null ? ` alert-${ alertType }` : '') }\n             role=\"alert\" style={ { display: alertType === null ? 'none' : 'block' } }>\n          { status }\n          <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"\n                  onClick={ this.onDismissAlert }>\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div className=\"airglow-progress progress\">\n          <div className=\"progress-bar progress-bar-striped progress-bar-animated\" role=\"progressbar\"\n               style={ { width: `${ progress }%` } }/>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 col-lg-4 container\">\n            <div className=\"form-group\">\n              <div className=\"airglow-canvas-container\">\n                <canvas className=\"airglow-canvas\" width={ 10 } height={ 10 } ref={ this.canvases.secret }/>\n              </div>\n              <div className=\"airglow-file input-group\">\n                <div className=\"input-group-prepend\">\n                  <span className=\"input-group-text\">Secret Image</span>\n                </div>\n                <div className=\"custom-file\">\n                  <input type=\"file\" className=\"custom-file-input\"\n                         onChange={ this.onChangeFile('secret') }/>\n                  <label className=\"custom-file-label\" htmlFor=\"inputGroupSecretImage\">{\n                    images.secret === null ? '' : `${ images.secret.width }*${ images.secret.height }`\n                  }</label>\n                </div>\n              </div>\n            </div>\n            <div className=\"form-group input-group\">\n              <div className=\"input-group-prepend\">\n                <label className=\"input-group-text\" htmlFor=\"forNWatermarks\">Number of Watermarks</label>\n              </div>\n              <input type=\"number\" className=\"form-control\" id=\"forNWatermarks\" min={ 1 } max={ maxWatermarks }\n                     value={ formData.nWatermarks } onChange={ this.onChangeFormData('nWatermarks') }/>\n            </div>\n          </div>\n          <div className=\"col-12 col-lg-4 container\">\n            <div className=\"form-group\">\n              <div className=\"airglow-canvas-container\">\n                <canvas className=\"airglow-canvas\" width={ 10 } height={ 10 } ref={ this.canvases.original }/>\n              </div>\n              <div className=\"airglow-file form-group input-group\">\n                <div className=\"input-group-prepend\">\n                  <span className=\"input-group-text\">Original Image</span>\n                </div>\n                <div className=\"custom-file\">\n                  <input type=\"file\" className=\"custom-file-input\"\n                         onChange={ this.onChangeFile('original') }/>\n                  <label className=\"custom-file-label\" htmlFor=\"inputGroupOriginalImage\">{\n                    images.original === null ? '' : `${ images.original.width }*${ images.original.height }`\n                  }</label>\n                </div>\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <div className=\"input-group\">\n                <div className=\"input-group-prepend\">\n                  <label className=\"input-group-text\" htmlFor=\"formSecretKey\">Secret Key</label>\n                </div>\n                <input type=\"text\" className=\"form-control\" id=\"formSecretKey\"\n                       value={ formData.secretKey } onChange={ this.onChangeFormData('secretKey') }/>\n              </div>\n              <small className=\"form-text text-muted\">\n                A secret key used to encrypt the data.\n              </small>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"forAlpha\">Alpha: { parseFloat(formData.alpha) / 100 }</label>\n              <input type=\"range\" className=\"custom-range\" id=\"forAlpha\" min={ 1 } max={ 100 }\n                     value={ formData.alpha } onChange={ this.onChangeFormData('alpha') }/>\n            </div>\n            <div className=\"airglow-buttons form-group\">\n              <button className=\"airglow-button btn btn-primary\"\n                      disabled={ encodeDisabled }\n                      onClick={ this.onEncode }>Encode!\n              </button>\n              <button className=\"airglow-button btn btn-primary\"\n                      disabled={ decodeDisabled }\n                      onClick={ this.onDecode }>Decode!\n              </button>\n            </div>\n          </div>\n          <div className=\"col-12 col-lg-4 container\">\n            <div className=\"form-group\">\n              <div className=\"airglow-canvas-container\">\n                <canvas className=\"airglow-canvas\" width={ 10 } height={ 10 } ref={ this.canvases.encoded }/>\n              </div>\n              <div className=\"airglow-file input-group\">\n                <div className=\"input-group-prepend\">\n                  <span className=\"input-group-text\">Encoded Image</span>\n                </div>\n                <div className=\"custom-file\">\n                  <input type=\"file\" className=\"custom-file-input\"\n                         onChange={ this.onChangeFile('encoded') }/>\n                  <label className=\"custom-file-label\" htmlFor=\"inputGroupEncodedImage\">{\n                    images.encoded === null ? '' : `${ images.encoded.width }*${ images.encoded.height }`\n                  }</label>\n                </div>\n              </div>\n            </div>\n            <div className=\"airglow-buttons form-group\">\n              <button className=\"airglow-button btn btn-primary\"\n                      disabled={ images.encoded === null }\n                      onClick={ this.onDownload('encoded') }>Download\n              </button>\n            </div>\n          </div>\n        </div>\n      </form>\n      <Footer/>\n    </div>)\n  }\n\n  public onChangeFormData(key: keyof IAppFormData): (e: React.ChangeEvent<HTMLInputElement>) => void {\n    return (e: React.ChangeEvent<HTMLInputElement>) => {\n      const formData = this.state.formData\n      formData[key] = e.target.value\n      this.setState({\n        formData\n      })\n    }\n  }\n}\n\nexport default App\n","/* eslint-disable */\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n)\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${ process.env.PUBLIC_URL }/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.')\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.')\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\n\nimport App from './App'\nimport './index.css'\nimport registerServiceWorker from './registerServiceWorker'\n\nwindow.onOpenCVReady = async () => {\n  delete window.onOpenCVReady\n  // eslint-disable-next-line @typescript-eslint/await-thenable\n  window.cv = await window.cv\n\n  ReactDOM.render(\n    <App/>,\n    document.getElementById('root') as HTMLElement\n  )\n  registerServiceWorker()\n}\n"],"sourceRoot":""}