{"version":3,"sources":["fft.ts","utils.ts","Random.ts","airglow.ts","Footer.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["fft2Image","image","data","n","length","r","Float32Array","g","b","a","i","splitRGBA","nx","width","ny","height","rfft2d","ifft2Image","rf","gf","bf","result","output","Uint8ClampedArray","mergeRGBA","irfft2d","ImageData","swap","arr","j","t","getCurrentVersion","tmp","window","location","pathname","split","s","startsWith","v","slice","process","compareVersion","regex","aa","match","bb","x","parseInt","y","RNG","seed","c","d","this","setState","hash","charCodeAt","state","hashCode","Date","now","z","undefined","makeSeed","splitMix32","Array","from","_","Math","floor","random","makeWatermark","original","secret","rng","nWatermarks","canvas","document","createElement","ctx","getContext","nRows","nCols","Error","putImageData","putWatermarks","shuffleMap","getPermutation","newData","forEach","k","shuffleWatermark","getImageData","encode","secretKey","nWatermark","alpha","logger","trim","watermark","fftOriginal","fftWatermark","mapFunction","fftEncoded","map","encoded","decodeWatermark","getScaled","drawImage","decode","encodedScaled","decoded","Footer","props","onVersionSelectedHandler","onVersionSelected","bind","currentVersion","versionList","fetch","response","text","content","sorted","filter","sort","join","console","warn","fetchVersionList","e","version","target","value","selectedIndex","className","href","onChange","key","React","App","canvases","onDismissAlert","dismissAlert","onLogger","onEncode","onDecode","logging","isWorking","alertType","formData","images","progress","status","app","clearRect","type","current","clearCanvas","fileInput","files","updateImage","file","Image","reader","FileReader","onload","onloadend","src","toString","readAsDataURL","Promise","resolve","setTimeout","preventDefault","dataURL","toDataURL","title","w","open","img","body","appendChild","typeName","message","originalImage","encodeDisabled","decodeDisabled","maxWatermarks","role","style","display","data-dismiss","aria-label","onClick","aria-hidden","ref","onChangeFile","htmlFor","id","min","max","onChangeFormData","disabled","onDownload","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","error","ReactDOM","getElementById","URL","origin","addEventListener","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"qUAoCO,SAASA,EAAUC,GAAyB,IAAD,EA/BlD,SAAmBC,GAOjB,IANA,IAAMC,EAAID,EAAKE,OAAS,EAClBC,EAAI,IAAIC,aAAaH,GACrBI,EAAI,IAAID,aAAaH,GACrBK,EAAI,IAAIF,aAAaH,GACrBM,EAAI,IAAIH,aAAaH,GAElBO,EAAI,EAAGA,EAAIP,EAAGO,IACrBL,EAAEK,GAAKR,EAAK,EAAIQ,GAChBH,EAAEG,GAAKR,EAAK,EAAIQ,EAAI,GACpBF,EAAEE,GAAKR,EAAK,EAAIQ,EAAI,GACpBD,EAAEC,GAAKR,EAAK,EAAIQ,EAAI,GAGtB,MAAO,CAACL,EAAGE,EAAGC,EAAGC,GAkBIE,CAAUV,EAAMC,MADW,mBACzCG,EADyC,KACtCE,EADsC,KACnCC,EADmC,KAChCC,EADgC,KAE1CG,EAAKX,EAAMY,MACXC,EAAKb,EAAMc,OAEjB,MAAO,CACLC,iBAAOX,EAAGO,EAAIE,GACdE,iBAAOT,EAAGK,EAAIE,GACdE,iBAAOR,EAAGI,EAAIE,GACdL,GAIG,SAASQ,EAAT,EAA2CJ,EAAeE,GAA4B,IAAD,mBAAhEG,EAAgE,KAA5DC,EAA4D,KAAxDC,EAAwD,KAApDX,EAAoD,KAIpFY,EA/BR,YAIE,IAJyD,IAAD,mBAAtChB,EAAsC,KAAnCE,EAAmC,KAAhCC,EAAgC,KAA7BC,EAA6B,KAClDN,EAAIE,EAAED,OACNkB,EAAS,IAAIC,kBAAsB,EAAJpB,GAE5BO,EAAI,EAAGA,EAAIP,EAAGO,IACrBY,EAAO,EAAIZ,GAAKL,EAAEK,GAClBY,EAAO,EAAIZ,EAAI,GAAKH,EAAEG,GACtBY,EAAO,EAAIZ,EAAI,GAAKF,EAAEE,GACtBY,EAAO,EAAIZ,EAAI,GAAKD,EAAEC,GAGxB,OAAOY,EAoBQE,CAAU,CAHfC,kBAAQP,EAAIL,EAAOE,GACnBU,kBAAQN,EAAIN,EAAOE,GACnBU,kBAAQL,EAAIP,EAAOE,GACMN,IACnC,OAAO,IAAIiB,UAAUL,EAAQR,EAAOE,GCtD/B,SAASY,EAAKC,EAAmClB,EAAWmB,GACjE,IAAMC,EAAIF,EAAIlB,GACdkB,EAAIlB,GAAKkB,EAAIC,GACbD,EAAIC,GAAKC,EAUJ,SAASC,IACd,IACMC,EAAMC,OAAOC,SAASC,SAASC,MAAM,KAC3C,GAAIJ,EAAI5B,OAAS,EAAG,CAClB,IAAMiC,EAAIL,EAAI,GACd,GAAU,WAANK,EACF,OAAOA,EACF,GAAIA,EAAEC,WAAW,KAAM,CAC5B,IAAMC,EAAIF,EAAEG,MAAM,GAClB,IARkBC,QAQCH,WAAWC,GAC5B,MAAO,OAIb,MAbsBE,QAgBjB,SAASC,EAAejC,EAAWD,GACxC,GAAU,WAANC,EACF,OAAQ,EACH,GAAU,WAAND,EACT,OAAO,EAKT,IAHA,IAAMmC,EAAQ,wBACRC,EAAKnC,EAAEoC,MAAMF,GACbG,EAAKtC,EAAEqC,MAAMF,GACnB,MAAgB,CAAC,EAAG,EAAG,GAAvB,eAA2B,CAAtB,IAAMjC,EAAC,KACJqC,EAAIC,SAASJ,EAAGlC,IAChBuC,EAAID,SAASF,EAAGpC,IACtB,GAAIqC,EAAIE,EACN,OAAQ,EACH,GAAIF,EAAIE,EACb,OAAO,EAGX,OAAO,ECvCT,IAWaC,EAAb,WAkCE,WAAYC,GAAoB,yBAFxBd,EAAkB,CAAC5B,EAAG,EAAGD,EAAG,EAAG4C,EAAG,EAAGC,EAAG,GAG9CC,KAAKC,SAASJ,GAnClB,0DAEyBd,GACrB,IAAImB,EAAO,EACX,GAAiB,IAAbnB,EAAEjC,OACJ,OAAOoD,EAET,IAAK,IAAI9C,EAAI,EAAGA,EAAI2B,EAAEjC,OAAQM,IAAK,CAEjC8C,GAASA,GAAQ,GAAKA,EADVnB,EAAEoB,WAAW/C,GAEzB8C,GArBa,WAuBf,OAAOA,IAZX,+BAeyBE,GACrB,MAAqB,kBAAVA,EACFA,EA5BM,WA6Ba,kBAAVA,EACTR,EAAIS,SAASD,GA9BP,WAgCRE,KAAKC,MAhCG,aAWnB,iCAwB2Bd,GACvBA,EAAE,IAAMA,EAAE,GAAK,YApCA,WAqCf,IAAIe,EAAIf,EAAE,GAGV,QADAe,EAAwB,aADxBA,EAAwB,YAAlBA,EAAKA,IAAM,IAtCF,YAuCJA,IAAM,IAvCF,YAwCFA,IAAM,IAxCJ,eAWnB,8CAsCkBJ,GACd,QAAcK,IAAVL,GAAwC,kBAAVA,EAAoB,CACpD,IAAMP,EAAiB,CAACD,EAAIc,SAASN,IAKrCA,EAAQ,CAACjD,EAJCyC,EAAIe,WAAWd,GAIb3C,EAHF0C,EAAIe,WAAWd,GAGVC,EAFLF,EAAIe,WAAWd,GAEPE,EADRH,EAAIe,WAAWd,IAG3BG,KAAKjB,EAAIqB,IA/Cb,iCAmDI,OAAOJ,KAAKjB,IAnDhB,qCAsDwBjC,GAEpB,IADA,IAAMwB,EAAMsC,MAAMC,KAAK,CAAE/D,WAAU,SAACgE,EAAG1D,GAAJ,OAAUA,KACtCN,EAAS,GAAG,CAGjBuB,EAAKC,EAFLxB,GAAU,EACAiE,KAAKC,MAAMhB,KAAKiB,SAAWnE,IAGvC,OAAOwB,IA7DX,+BAiEI,IAAMS,EAAIiB,KAAKjB,EACTP,EAAIO,EAAE7B,GAAK,EACbH,EAAU,EAANgC,EAAE5B,EAQV,OAPAJ,EAA8B,GAAxBA,GAAK,EAAMA,IAAM,IACvBgC,EAAEe,GAAKf,EAAE5B,EACT4B,EAAEgB,GAAKhB,EAAE7B,EACT6B,EAAE7B,GAAK6B,EAAEe,EACTf,EAAE5B,GAAK4B,EAAEgB,EACThB,EAAEe,GAAKtB,EACPO,EAAEgB,EAAKhB,EAAEgB,GAAK,GAAOhB,EAAEgB,IAAM,IACrBhD,IAAM,GAtFC,eAWnB,KC6BA,SAASmE,EAAcC,EAAqBC,EAAmBC,GAA+C,IAArCC,EAAoC,uDAAd,EACvFC,EAASC,SAASC,cAAc,UAC/BlE,EAAiB4D,EAAjB5D,MAAOE,EAAU0D,EAAV1D,OACd8D,EAAOhE,MAAQA,EACfgE,EAAO9D,OAASA,EAChB,IAAMiE,EAAMH,EAAOI,WAAW,MAI9B,OA/BF,SACEJ,EAA2BG,EAC3BP,EAAqBC,EAAmBE,GAExC,IAAMM,EAAQb,KAAKC,MAAMG,EAAS1D,OAAS,EAAI2D,EAAO3D,QAChDoE,EAAQd,KAAKC,MAAMG,EAAS5D,MAAQ6D,EAAO7D,OACjD,GAAc,IAAVqE,GAAyB,IAAVC,EACjB,MAAM,IAAIC,MAAM,iEAA2DX,EAAS5D,MAApE,6BACCwD,KAAKC,MAAMG,EAAS1D,OAAS,KAGhD,IARA,IAOOF,EAAiB6D,EAAjB7D,MAAOE,EAAU2D,EAAV3D,OACLL,EAAI,EAAGA,EAAIwE,IAASxE,EAC3B,IAAK,IAAImB,EAAI,EAAGA,EAAIsD,IAAStD,EAAG,CAE9B,IADA+C,GAAe,GACG,EAChB,OAEFI,EAAIK,aAAaX,EAAQ7C,EAAIhB,EAAOH,EAAIK,IAW1CuE,CAAcT,EAAQG,EAAKP,EAAUC,EAAQE,GAzCjD,SAA0B1E,EAAiByE,GACzC,IAAMvE,EAASiE,KAAKC,MAAMpE,EAAKA,KAAKE,OAAS,GACvCmF,EAAaZ,EAAIa,eAAenB,KAAKC,MAAMlE,EAAS,IACpDqF,EAAU,IAAI/D,UAAUxB,EAAKA,KAAKsC,QAAStC,EAAKW,MAAOX,EAAKa,QAOlE,OANAwE,EAAWG,SAAQ,SAACnD,EAAG7B,GACrB,IAAK,IAAIiF,EAAI,EAAGA,EAAI,IAAKA,EACvBF,EAAQvF,KAAS,EAAJQ,EAAQiF,GAAKzF,EAAKA,KAAS,EAAJqC,EAAQoD,GAC5CF,EAAQvF,KAAwB,GAAlBE,EAAS,EAAIM,GAASiF,GAAKzF,EAAKA,KAAS,EAAJqC,EAAQoD,MAGxDF,EAiCcG,CADRZ,EAAIa,aAAa,EAAG,EAAGhF,EAAOE,GACC4D,GAIvC,SAAemB,EAAtB,4C,4CAAO,WACLrB,EAAqBC,EACrBqB,EAAmBC,EAAoBC,EACvCC,GAHK,2BAAAzF,EAAA,sEAKCyF,EAAO,EAAG,gBALX,UAOa,MADlBH,EAAYA,EAAUI,QANjB,sBAQG,IAAIf,MAAM,8BARb,uBAUCc,EAAO,EAAG,qBAVX,cAWCvB,EAAM,IAAIzB,EAAI6C,GACdK,EAAY5B,EAAcC,EAAUC,EAAQC,EAAKqB,GAZlD,UAaCE,EAAO,GAAI,sDAbZ,eAcCG,EAAcrG,EAAUyE,GAdzB,UAeCyB,EAAO,GAAI,kDAfZ,eAgBCI,EAAetG,EAAUoG,GAhB1B,UAiBCF,EAAO,GAAI,qDAjBZ,eAkBCK,EAAc,SAAC7F,GAAD,OAAe,SAACqC,EAAWlB,GAAZ,OAA0BkB,EAAIuD,EAAa5F,GAAGmB,GAAKoE,IAChFO,EAAmB,CACvBH,EAAY,GAAGI,IAAIF,EAAY,IAC/BF,EAAY,GAAGI,IAAIF,EAAY,IAC/BF,EAAY,GAAGI,IAAIF,EAAY,IAC/BF,EAAY,IAvBT,UAyBCH,EAAO,GAAI,mCAzBZ,eA0BCQ,EAAUzF,EAAWuF,EAAY/B,EAAS5D,MAAO4D,EAAS1D,QA1B3D,UA2BCmF,EAAO,IAAK,YAAa,WA3B1B,iCA4BEQ,GA5BF,6C,sBA+BA,SAASC,EAAgBP,EAAsBzB,GACpD,IAAMvE,EAASiE,KAAKC,MAAM8B,EAAUlG,KAAKE,OAAS,GAC5CmF,EAAaZ,EAAIa,eAAenB,KAAKC,MAAMlE,EAAS,IACpDF,EAAO,IAAIwB,UAAU0E,EAAUlG,KAAKsC,QAAS4D,EAAUvF,MAAOuF,EAAUrF,QAO9E,OANAwE,EAAWG,SAAQ,SAACnD,EAAG7B,GACrB,IAAK,IAAIiF,EAAI,EAAGA,EAAI,IAAKA,EACvBzF,EAAKA,KAAS,EAAJqC,EAAQoD,GAAKS,EAAUlG,KAAS,EAAJQ,EAAQiF,GAC9CzF,EAAKA,KAAwB,GAAlBE,EAAS,EAAImC,GAASoD,GAAKS,EAAUlG,KAAwB,GAAlBE,EAAS,EAAIM,GAASiF,MAGzEzF,EAGF,SAAS0G,EAAUF,EAA2BjC,GACnD,IAAMI,EAASC,SAASC,cAAc,UAC9BlE,EAAkB4D,EAAlB5D,MAAOE,EAAW0D,EAAX1D,OACf8D,EAAOhE,MAAQA,EACfgE,EAAO9D,OAASA,EAChB,IAAMiE,EAAMH,EAAOI,WAAW,MAG9B,OAFAD,EAAI6B,UAAUH,EAAS,EAAG,EAAG7F,EAAOE,GACrBiE,EAAIa,aAAa,EAAG,EAAGhF,EAAOE,GAIxC,SAAe+F,EAAtB,0C,4CAAO,WACLrC,EAAqBiC,EACrBX,EAAmBE,EACnBC,GAHK,6BAAAzF,EAAA,sEAKCyF,EAAO,EAAG,gBALX,UAOa,MADlBH,EAAYA,EAAUI,QANjB,sBASG,IAAIf,MAAM,8BATb,uBAWCc,EAAO,EAAG,sDAXX,cAYCG,EAAcrG,EAAUyE,GAZzB,UAaCyB,EAAO,GAAI,6BAbZ,eAcCa,EAAgBH,EAAUF,EAASjC,GAdpC,UAeCyB,EAAO,GAAI,qDAfZ,eAgBCM,EAAaxG,EAAU+G,GAhBxB,UAiBCb,EAAO,GAAI,kDAjBZ,eAkBCK,EAAc,SAAC7F,GAAD,OAAe,SAACqC,EAAWlB,GAAZ,OAA2B2E,EAAW9F,GAAGmB,GAAKkB,GAAKkD,IAChFK,EAAqB,CACzBD,EAAY,GAAGI,IAAIF,EAAY,IAC/BF,EAAY,GAAGI,IAAIF,EAAY,IAC/BF,EAAY,GAAGI,IAAIF,EAAY,IAC/BF,EAAY,IAvBT,UAyBCH,EAAO,GAAI,oCAzBZ,eA0BCE,EAAYnF,EAAWqF,EAAc7B,EAAS5D,MAAO4D,EAAS1D,QA1B/D,UA2BCmF,EAAO,GAAI,mCA3BZ,eA4BCvB,EAAM,IAAIzB,EAAI6C,GACdiB,EAAUL,EAAgBP,EAAWzB,GA7BtC,UA8BCuB,EAAO,IAAK,YAAa,WA9B1B,iCA+BEc,GA/BF,6C,gCCvGcC,E,YAGnB,WAAaC,GAAY,IAAD,uBACtB,4CAAMA,KAHAC,yBAA2B,EAAKC,kBAAkBC,KAAvB,gBAIjC,IAAMC,EAAiBvF,IAFD,OAGtB,EAAK2B,MAAQ,CACX4D,iBACAC,YAAa,CACX,SACAD,IAPkB,E,+NAcGE,MAAM,a,cAAvBC,E,gBACgBA,EAASC,O,OAAzBC,E,OACAC,EAASD,EAAQvF,MAAM,MAC1ByF,QAAO,SAAC9E,GAAD,MAAoB,KAAbA,EAAEoD,UAChBM,KAAI,SAAC1D,GAAD,OAAOA,EAAET,WAAW,KAAOS,EAAEP,MAAM,GAAKO,KAC5C+E,KAAKpF,GACF6E,EAAcK,EAAOC,QAAO,SAAC9E,EAAGrC,GAAJ,OAAUA,EAAI,IAC7CqC,EAAET,WAAWsF,EAAOlH,EAAI,GAAG0B,MAAM,KAAKI,MAAM,GAAI,GAAGuF,KAAK,SAE3DzE,KAAKC,SAAS,CACZgE,gB,kDAIFS,QAAQC,KAAK,qC,0JAKf3E,KAAK4E,qB,wCAGmBC,GACxB,IAAMC,EAAUD,EAAEE,OAAOC,MACrBH,EAAEE,QAAqC,IAA3BF,EAAEE,OAAOE,cACvBtG,OAAOC,SAASC,SAAW,UAE3BF,OAAOC,SAASC,SADK,WAAZiG,EACkB,UAE3B,YAAgCA,K,+BAKlC,OAAO,0BAAQI,UAAU,uBACvB,uBAAKA,UAAU,8BACb,uBAAKA,UAAU,2BAAf,MAA4C,qBAAGC,KAAK,oBAAR,SAA5C,MAAmF,qBAAGA,KAAK,8BAAR,gBAAnF,SACA,uBAAKD,UAAU,2BAAf,kBAAwD,qBAAGC,KAAOhG,sCAAV,UAAxD,SACA,uBAAK+F,UAAU,gBACb,wBAAMA,UAAU,cAAhB,aACA,0BAAQA,UAAU,iCAChBF,MAAQhF,KAAKI,MAAM4D,eAAiBoB,SAAWpF,KAAK6D,0BAClD7D,KAAKI,MAAM6D,YAAYd,KAAI,SAAC2B,EAAS1H,GAAV,OAAgB,0BAAQiI,IAAMjI,EACzD4H,MAAQF,GAAYA,GAAiB,IAAN1H,EAAU,YAAc,gB,GA5DjCkI,aCkWrBC,E,YAzTb,WAAmB3B,GAAY,IAAD,8BAC5B,4CAAMA,KAfD4B,SAAW,CAChBpC,QAASkC,cACTnE,SAAUmE,cACVlE,OAAQkE,eAWoB,EARvBG,eAAiB,EAAKC,aAAa3B,KAAlB,gBAQM,EAPvB4B,SAAW,EAAK/C,OAAOmB,KAAZ,gBAOY,EANvB6B,SAAW,EAAKpD,OAAOuB,KAAZ,gBAMY,EALvB8B,SAAW,EAAKrC,OAAOO,KAAZ,gBAKY,EAHtB+B,QAA+B,KAGT,EAFtBC,WAAY,EAIlB,EAAK3F,MAAQ,CACX4F,UAAW,KACXC,SAAU,CACRtD,MAAO,EACPrB,YAAa,EACbmB,UAAW,IAEbyD,OAAQ,CACN9C,QAAS,KACTjC,SAAU,KACVC,OAAQ,MAEV+E,SAAU,EACVC,OAAQ,IAGVzH,OAAO0H,IAAP,eAlB4B,E,8EArBH9E,GACzBA,EAAOhE,MAAQ,GACfgE,EAAO9D,OAAS,GACJ8D,EAAOI,WAAW,MACzB2E,UAAU,EAAG,EAAG,GAAI,Q,oDAuCzBtG,KAAKC,SAAS,CAAC+F,UAAW,KAAMI,OAAQ,O,kCAGvBG,EAAiB5J,GAClC,IAAMuJ,EAASlG,KAAKI,MAAM8F,OAC1BA,EAAOK,GAAQ5J,EACfqD,KAAKC,SAAS,CACZiG,a,mCAIgBK,GAAkB,IAAD,OACnC,OAAO,SAAC1B,GACN,IAAMtD,EAAS,EAAKiE,SAASe,GAAMC,QACnC,GAAe,OAAXjF,EAAJ,CAGAgE,EAAIkB,YAAYlF,GAChB,IAAMmF,EAAY7B,EAAEE,OACd4B,EAAQD,EAAUC,MACxB,GAAc,OAAVA,GAAkBA,EAAM7J,OAAS,EACnC,EAAK8J,YAAYL,EAAM,UADzB,CAIA,IAAMM,EAAOF,EAAM,GACbhK,EAAQ,IAAImK,MACZC,EAAS,IAAIC,WACnBrK,EAAMsK,OAAS,WACb1F,EAAOhE,MAAQZ,EAAMY,MACrBgE,EAAO9D,OAASd,EAAMc,OACV8D,EAAOI,WAAW,MACzB4B,UAAU5G,EAAO,EAAG,GACzB,EAAKiK,YAAYL,EAAM5J,IAEzBoK,EAAOG,UAAY,WACK,OAAlBH,EAAOhJ,SACTpB,EAAMwK,IAAMJ,EAAOhJ,OAAOqJ,aAG9BL,EAAOM,cAAcR,GACrBH,EAAU1B,MAAQ,Q,6BAIRmB,EAAkBC,GAAkE,IAAD,OAAjDJ,EAAiD,uDAA1B,UACrE,OAAO,IAAIsB,SAAc,SAAAC,GACvB,EAAKzB,QAAU,WACbyB,KAEF,EAAKtH,SAAS,CACZ+F,YACAG,WACAC,gB,2CAMJ,GAAqB,OAAjBpG,KAAK8F,QAAkB,CACzB,IAAMtH,EAAIwB,KAAK8F,QACf9F,KAAK8F,QAAU,KACf0B,WAAWhJ,EAAG,Q,iCAIA+H,GAAkB,IAAD,OACjC,OAAO,SAAC1B,GACNA,EAAE4C,iBACF,IAAMlG,EAAS,EAAKiE,SAASe,GAAMC,QACnC,GAAgB,OAAZjF,EAAJ,CAGA,IAAMmG,EAAUnG,EAAOoG,UAAU,aAC3BC,EAAK,UAAMrB,EAAN,QACLsB,EAAIlJ,OAAOmJ,KAAK,cAAeF,GACrCC,EAAErG,SAASoG,MAAQA,EACnB,IAAMG,EAAMF,EAAErG,SAASC,cAAc,OACrCsG,EAAIZ,IAAMO,EACVG,EAAErG,SAASwG,KAAKC,YAAYF,O,sEAIZlD,G,2GAClBA,EAAE4C,kBACEzH,KAAK+F,U,iDAGT/F,KAAK+F,WAAY,E,EACuB/F,KAAKI,MAAM6F,SAA5CxD,E,EAAAA,UAAWE,E,EAAAA,MAAOrB,E,EAAAA,YACnB1E,EAAY,G,MACK,CAAC,WAAY,U,4CAAzBsL,E,KACH3B,EAAO2B,EACPxG,EAAM1B,KAAKwF,SAASe,GAAMC,QAAS7E,WAAW,MAExC,QADNoG,EAAM/H,KAAKI,MAAM8F,OAAOK,I,mDAI9B3J,EAAK2J,GAAQ7E,EAAIa,aAAa,EAAG,EAAGwF,EAAIxK,MAAOwK,EAAItK,Q,0CAE/C8D,EAASvB,KAAKwF,SAASpC,QAAQoD,QACrCjB,EAAIkB,YAAYlF,G,oBAEOiB,EAAO5F,EAAKuE,SAAUvE,EAAKwE,OAAQqB,EAAWnB,EAAaqB,EAAQ,IAAK3C,KAAK2F,U,QAA5F5H,E,OACNwD,EAAOhE,MAAQQ,EAAOR,MACtBgE,EAAO9D,OAASM,EAAON,OACX8D,EAAOI,WAAW,MAC1BI,aAAahE,EAAQ,EAAG,IACtBpB,EAAQ6E,SAASC,cAAc,QAC/BwF,OAAS,kBAAM,EAAKL,YAAY,UAAWjK,IACjDA,EAAMwK,IAAM5F,EAAOoG,UAAU,a,mDAE7B3H,KAAKC,SAAS,CACZ+F,UAAW,SACXI,OAAQ,KAAE+B,U,QAGdnI,KAAK+F,WAAY,E,wLAGClB,G,mGAClBA,EAAE4C,kBACEzH,KAAK+F,U,oDAGT/F,KAAK+F,WAAY,E,EACU/F,KAAKI,MAAM6F,SAA/BtD,E,EAAAA,MAAOF,E,EAAAA,UACRf,EAAM1B,KAAKwF,SAASrE,SAASqF,QAAS7E,WAAW,MAEjC,QADhByG,EAAgBpI,KAAKI,MAAM8F,OAAO/E,U,oDAIlCA,EAAWO,EAAIa,aAAa,EAAG,EAAG6F,EAAc7K,MAAO6K,EAAc3K,QAE3D,QADV2F,EAAUpD,KAAKI,MAAM8F,OAAO9C,S,0DAI5B7B,EAASvB,KAAKwF,SAASpE,OAAOoF,QACpCjB,EAAIkB,YAAYlF,G,oBAEOiC,EAAOrC,EAAUiC,EAASX,EAAWE,EAAQ,IAAK3C,KAAK2F,U,QAAtE5H,E,OACNwD,EAAOhE,MAAQQ,EAAOR,MACtBgE,EAAO9D,OAASM,EAAON,OACX8D,EAAOI,WAAW,MAC1BI,aAAahE,EAAQ,EAAG,IACtBpB,EAAQ6E,SAASC,cAAc,QAC/BwF,OAAS,kBAAM,EAAKL,YAAY,SAAUjK,IAChDA,EAAMwK,IAAM5F,EAAOoG,UAAU,a,mDAE7B3H,KAAKC,SAAS,CACZ+F,UAAW,SACXI,OAAQ,KAAE+B,U,QAGdnI,KAAK+F,WAAY,E,iJAGF,IFnOc5E,EAAmCC,EEmOlD,EAC0CpB,KAAKI,MAAtD4F,EADO,EACPA,UAAWC,EADJ,EACIA,SAAUC,EADd,EACcA,OAAQC,EADtB,EACsBA,SAAUC,EADhC,EACgCA,OACxCiC,EAAqC,OAApBnC,EAAO/E,UAAuC,OAAlB+E,EAAO9E,QAAiD,KAA9B6E,EAASxD,UAAUI,OAC1FyF,EAAoC,OAAnBpC,EAAO9C,SAAwC,OAApB8C,EAAO/E,UAAmD,KAA9B8E,EAASxD,UAAUI,OAC3F0F,GFvOuBpH,EEuOU+E,EAAO/E,SFvOkBC,EEuOR8E,EAAO9E,OFtOhD,OAAbD,GAAgC,OAAXC,EAChB,EAEKL,KAAKC,MAAMG,EAAS1D,OAAS,EAAI2D,EAAO3D,QACxCsD,KAAKC,MAAMG,EAAS5D,MAAQ6D,EAAO7D,QEmO/C,OAAQ,uBAAK2H,UAAU,OACrB,wBAAMA,UAAU,gCACd,sCAAezG,IAAf,KACA,uBAAKyG,UAAY,qCAAqD,OAAdc,EAAA,iBAAgCA,GAAe,IAClGwC,KAAK,QAAQC,MAAQ,CAACC,QAAuB,OAAd1C,EAAqB,OAAS,UAC9DI,EACF,0BAAQG,KAAK,SAASrB,UAAU,QAAQyD,eAAa,QAAQC,aAAW,QAChEC,QAAU7I,KAAKyF,gBACrB,wBAAMqD,cAAY,QAAlB,UAGJ,uBAAK5D,UAAU,6BACb,uBAAKA,UAAU,0DAA0DsD,KAAK,cACzEC,MAAQ,CAAClL,MAAM,GAAD,OAAM4I,EAAN,SAErB,uBAAKjB,UAAU,OACb,uBAAKA,UAAU,6BACb,uBAAKA,UAAU,cACb,uBAAKA,UAAU,4BACb,0BAAQA,UAAU,iBAAiB3H,MAAQ,GAAKE,OAAS,GAAKsL,IAAM/I,KAAKwF,SAASpE,UAEpF,uBAAK8D,UAAU,4BACb,uBAAKA,UAAU,uBACb,wBAAMA,UAAU,oBAAhB,iBAEF,uBAAKA,UAAU,eACb,yBAAOqB,KAAK,OAAOrB,UAAU,oBACtBE,SAAWpF,KAAKgJ,aAAa,YACpC,yBAAO9D,UAAU,oBAAoB+D,QAAQ,yBACzB,OAAlB/C,EAAO9E,OAAkB,GAAzB,UAAkC8E,EAAO9E,OAAO7D,MAAhD,YAA2D2I,EAAO9E,OAAO3D,YAKjF,uBAAKyH,UAAU,0BACb,uBAAKA,UAAU,uBACb,yBAAOA,UAAU,mBAAmB+D,QAAQ,kBAA5C,yBAEF,yBAAO1C,KAAK,SAASrB,UAAU,eAAegE,GAAG,iBAAiBC,IAAM,EAAIC,IAAMb,EAC3EvD,MAAQiB,EAAS3E,YAAc8D,SAAWpF,KAAKqJ,iBAAiB,mBAG3E,uBAAKnE,UAAU,6BACb,uBAAKA,UAAU,cACb,uBAAKA,UAAU,4BACb,0BAAQA,UAAU,iBAAiB3H,MAAQ,GAAKE,OAAS,GAAKsL,IAAM/I,KAAKwF,SAASrE,YAEpF,uBAAK+D,UAAU,uCACb,uBAAKA,UAAU,uBACb,wBAAMA,UAAU,oBAAhB,mBAEF,uBAAKA,UAAU,eACb,yBAAOqB,KAAK,OAAOrB,UAAU,oBACtBE,SAAWpF,KAAKgJ,aAAa,cACpC,yBAAO9D,UAAU,oBAAoB+D,QAAQ,2BACvB,OAApB/C,EAAO/E,SAAoB,GAA3B,UAAoC+E,EAAO/E,SAAS5D,MAApD,YAA+D2I,EAAO/E,SAAS1D,YAKvF,uBAAKyH,UAAU,cACb,uBAAKA,UAAU,eACb,uBAAKA,UAAU,uBACb,yBAAOA,UAAU,mBAAmB+D,QAAQ,iBAA5C,eAEF,yBAAO1C,KAAK,OAAOrB,UAAU,eAAegE,GAAG,gBACxClE,MAAQiB,EAASxD,UAAY2C,SAAWpF,KAAKqJ,iBAAiB,gBAEvE,yBAAOnE,UAAU,wBAAjB,2CAIF,uBAAKA,UAAU,cACb,yBAAO+D,QAAQ,YAAf,UAAmChD,EAAStD,MAAQ,KACpD,yBAAO4D,KAAK,QAAQrB,UAAU,eAAegE,GAAG,WAAWC,IAAM,EAAIC,IAAM,IACpEpE,MAAQiB,EAAStD,MAAQyC,SAAWpF,KAAKqJ,iBAAiB,YAEnE,uBAAKnE,UAAU,8BACb,0BAAQA,UAAU,iCACVoE,SAAWjB,EACXQ,QAAU7I,KAAK4F,UAFvB,WAIA,0BAAQV,UAAU,iCACVoE,SAAWhB,EACXO,QAAU7I,KAAK6F,UAFvB,aAMJ,uBAAKX,UAAU,6BACb,uBAAKA,UAAU,cACb,uBAAKA,UAAU,4BACb,0BAAQA,UAAU,iBAAiB3H,MAAQ,GAAKE,OAAS,GAAKsL,IAAM/I,KAAKwF,SAASpC,WAEpF,uBAAK8B,UAAU,4BACb,uBAAKA,UAAU,uBACb,wBAAMA,UAAU,oBAAhB,kBAEF,uBAAKA,UAAU,eACb,yBAAOqB,KAAK,OAAOrB,UAAU,oBACtBE,SAAWpF,KAAKgJ,aAAa,aACpC,yBAAO9D,UAAU,oBAAoB+D,QAAQ,0BACxB,OAAnB/C,EAAO9C,QAAmB,GAA1B,UAAmC8C,EAAO9C,QAAQ7F,MAAlD,YAA6D2I,EAAO9C,QAAQ3F,YAKpF,uBAAKyH,UAAU,8BACb,0BAAQA,UAAU,iCACVoE,SAA8B,OAAnBpD,EAAO9C,QAClByF,QAAU7I,KAAKuJ,WAAW,YAFlC,gBAQR,gBAAC,EAAD,S,uCAIoBlE,GAA0B,IAAD,OAC/C,OAAO,SAACR,GACN,IAAMoB,EAAW,EAAK7F,MAAM6F,SAC5BA,EAASZ,GAAQR,EAAEE,OAA4BC,MAC/C,EAAK/E,SAAS,CACZgG,kB,GA1UUX,aCpBZkE,G,MAAcC,QACW,cAA7B9K,OAAOC,SAAS8K,UAEe,UAA7B/K,OAAOC,SAAS8K,UAEhB/K,OAAOC,SAAS8K,SAASnK,MACvB,4DAyCN,SAASoK,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WAClCD,IACFA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB/J,QACfyJ,UAAUC,cAAcQ,WAK1B5F,QAAQ6F,IAAI,6CAKZ7F,QAAQ6F,IAAI,6CAOvBC,OAAM,SAAAC,GACL/F,QAAQ+F,MAAM,4CAA6CA,MC/EjEC,SACE,gBAAC,EAAD,MACAlJ,SAASmJ,eAAe,SDaX,WACb,GAA6C,kBAAmBd,UAAW,CAMzE,GAJkB,IAAIe,IACpBzL,IACAR,OAAOC,SAASwI,YAEJyD,SAAWlM,OAAOC,SAASiM,OAIvC,OAGFlM,OAAOmM,iBAAiB,QAAQ,WAC9B,IAAMlB,EAAK,UAAMzK,IAAN,sBAEPqK,IAmDV,SAAiCI,GAE/B1F,MAAM0F,GACHI,MAAK,SAAA7F,GAGkB,MAApBA,EAASiC,SACwD,IAAjEjC,EAAS4G,QAAQC,IAAI,gBAAiBC,QAAQ,cAG9CpB,UAAUC,cAAcoB,MAAMlB,MAAK,SAAAC,GACjCA,EAAakB,aAAanB,MAAK,WAC7BrL,OAAOC,SAASwM,eAKpBzB,EAAgBC,MAGnBY,OAAM,WACL9F,QAAQ6F,IACN,oEAvEAc,CAAwBzB,GAIxBC,UAAUC,cAAcoB,MAAMlB,MAAK,WACjCtF,QAAQ6F,IACN,gHAMJZ,EAAgBC,OC1CxB0B,K","file":"static/js/main.8b1afd7d.chunk.js","sourcesContent":["import { irfft2d, rfft2d } from '@ryukina/kissfft-wasm'\n\nimport { RGBA } from './utils'\n\n\nfunction splitRGBA(data: Uint8ClampedArray): RGBA {\n  const n = data.length / 4\n  const r = new Float32Array(n)\n  const g = new Float32Array(n)\n  const b = new Float32Array(n)\n  const a = new Float32Array(n)\n\n  for (let i = 0; i < n; i++) {\n    r[i] = data[4 * i]\n    g[i] = data[4 * i + 1]\n    b[i] = data[4 * i + 2]\n    a[i] = data[4 * i + 3]\n  }\n\n  return [r, g, b, a]\n}\n\nfunction mergeRGBA([r, g, b, a]: RGBA): Uint8ClampedArray {\n  const n = r.length\n  const output = new Uint8ClampedArray(n * 4)\n\n  for (let i = 0; i < n; i++) {\n    output[4 * i] = r[i]\n    output[4 * i + 1] = g[i]\n    output[4 * i + 2] = b[i]\n    output[4 * i + 3] = a[i]\n  }\n\n  return output\n}\n\nexport function fft2Image(image: ImageData): RGBA {\n  const [r, g, b, a] = splitRGBA(image.data)\n  const nx = image.width\n  const ny = image.height\n\n  return [\n    rfft2d(r, nx, ny),\n    rfft2d(g, nx, ny),\n    rfft2d(b, nx, ny),\n    a\n  ]\n}\n\nexport function ifft2Image([rf, gf, bf, a]: RGBA, width: number, height: number): ImageData {\n  const r = irfft2d(rf, width, height)\n  const g = irfft2d(gf, width, height)\n  const b = irfft2d(bf, width, height)\n  const result = mergeRGBA([r, g, b, a])\n  return new ImageData(result, width, height)\n}\n","export function swap(arr: number[] | Uint8ClampedArray, i: number, j: number) {\n  const t = arr[i]\n  arr[i] = arr[j]\n  arr[j] = t\n}\n\n\nexport type AlertType = 'primary' | 'danger' | 'success'\n\nexport type Logger = (progress: number, status: string, alertType?: AlertType) => Promise<void>\n\nexport type RGBA = [Float32Array, Float32Array, Float32Array, Float32Array]\n\nexport function getCurrentVersion(): string {\n  const versionNumber = process.env.REACT_APP_VERSION!\n  const tmp = window.location.pathname.split('/')\n  if (tmp.length > 1) {\n    const s = tmp[1]\n    if (s === 'latest') {\n      return s\n    } else if (s.startsWith('v')) {\n      const v = s.slice(1)\n      if (!versionNumber.startsWith(v)) {\n        return '???'\n      }\n    }\n  }\n  return versionNumber\n}\n\nexport function compareVersion(a: string, b: string): number {\n  if (a === 'latest') {\n    return -1\n  } else if (b === 'latest') {\n    return 1\n  }\n  const regex = /^(\\d+)\\.(\\d+)\\.(\\d+)$/\n  const aa = a.match(regex)!\n  const bb = b.match(regex)!\n  for (const i of [1, 2, 3]) {\n    const x = parseInt(aa[i])\n    const y = parseInt(bb[i])\n    if (x > y) {\n      return -1\n    } else if (x < y) {\n      return 1\n    }\n  }\n  return 0\n}\n","/*\n * xoshiro128** random number generator.\n * http://prng.di.unimi.it\n */\n\n/* tslint:disable:no-bitwise */\n\nimport { swap } from './utils'\n\nconst UINT32_MAX = 4294967296\n\nexport interface IRandomState {\n  a: number\n  b: number\n  c: number\n  d: number\n}\n\nexport type RandomSeed = IRandomState | number | string\n\nexport class RNG {\n\n  public static hashCode(s: string): number {\n    let hash = 0\n    if (s.length === 0) {\n      return hash\n    }\n    for (let i = 0; i < s.length; i++) {\n      const chr = s.charCodeAt(i)\n      hash = ((hash << 5) - hash) + chr\n      hash %= UINT32_MAX\n    }\n    return hash\n  }\n\n  public static makeSeed(state?: number | string): number {\n    if (typeof state === 'number') {\n      return state % UINT32_MAX\n    } else if (typeof state === 'string') {\n      return RNG.hashCode(state) % UINT32_MAX\n    }\n    return Date.now() % UINT32_MAX\n  }\n\n  public static splitMix32(x: [number]): number {\n    x[0] = (x[0] + 0x9e3779b9) % UINT32_MAX\n    let z = x[0]\n    z = ((z ^ (z >>> 16)) * 0x85ebca6b) % UINT32_MAX\n    z = ((z ^ (z >>> 13)) * 0xc2b2ae35) % UINT32_MAX\n    return (z ^ (z >>> 16)) % UINT32_MAX\n  }\n\n  private s: IRandomState = {a: 0, b: 0, c: 0, d: 0}\n\n  constructor(seed?: RandomSeed) {\n    this.setState(seed)\n  }\n\n  public setState(state?: RandomSeed) {\n    if (state === undefined || typeof state !== 'object') {\n      const seed: [number] = [RNG.makeSeed(state)]\n      const a = RNG.splitMix32(seed)\n      const b = RNG.splitMix32(seed)\n      const c = RNG.splitMix32(seed)\n      const d = RNG.splitMix32(seed)\n      state = {a, b, c, d}\n    }\n    this.s = state\n  }\n\n  public getState(): IRandomState {\n    return this.s\n  }\n\n  public getPermutation(length: number): number[] {\n    const arr = Array.from({ length }, (_, i) => i)\n    while (length > 1) {\n      length -= 1\n      const j = Math.floor(this.random() * length)\n      swap(arr, length, j)\n    }\n    return arr\n  }\n\n  public random(): number {\n    const s = this.s\n    const t = s.b << 9\n    let r = s.a * 5\n    r = ((r << 7) | (r >>> 25)) * 9\n    s.c ^= s.a\n    s.d ^= s.b\n    s.b ^= s.c\n    s.a ^= s.d\n    s.c ^= t\n    s.d = (s.d << 11) | (s.d >>> 21)\n    return (r >>> 0) / UINT32_MAX\n  }\n}\n","import { fft2Image, ifft2Image } from './fft'\n\nimport { RNG } from './Random'\nimport { Logger, RGBA } from './utils'\n\nexport function getMaxWatermarks(original: HTMLImageElement | null, secret: HTMLImageElement | null): number {\n  if (original === null || secret === null) {\n    return 0\n  }\n  const nRows = Math.floor(original.height / 2 / secret.height)\n  const nCols = Math.floor(original.width / secret.width)\n  return nRows * nCols\n}\n\nfunction shuffleWatermark(data: ImageData, rng: RNG): ImageData {\n  const length = Math.floor(data.data.length / 4)\n  const shuffleMap = rng.getPermutation(Math.floor(length / 2))\n  const newData = new ImageData(data.data.slice(), data.width, data.height)\n  shuffleMap.forEach((v, i) => {\n    for (let k = 0; k < 4; ++k) {\n      newData.data[i * 4 + k] = data.data[v * 4 + k]\n      newData.data[(length - 1 - i) * 4 + k] = data.data[v * 4 + k]\n    }\n  })\n  return newData\n}\n\nfunction putWatermarks(\n  canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D,\n  original: ImageData, secret: ImageData, nWatermarks: number\n) {\n  const nRows = Math.floor(original.height / 2 / secret.height)\n  const nCols = Math.floor(original.width / secret.width)\n  if (nRows === 0 || nCols === 0) {\n    throw new Error(`Secret image is too large: use an image whose width <= ${ original.width } and` +\n      ` height <= ${ Math.floor(original.height / 2) }`)\n  }\n  const {width, height} = secret\n  for (let i = 0; i < nRows; ++i) {\n    for (let j = 0; j < nCols; ++j) {\n      nWatermarks -= 1\n      if (nWatermarks < 0) {\n        return\n      }\n      ctx.putImageData(secret, j * width, i * height)\n    }\n  }\n}\n\nfunction makeWatermark(original: ImageData, secret: ImageData, rng: RNG, nWatermarks: number = 1): ImageData {\n  const canvas = document.createElement('canvas')\n  const {width, height} = original\n  canvas.width = width\n  canvas.height = height\n  const ctx = canvas.getContext('2d')!\n    putWatermarks(canvas, ctx, original, secret, nWatermarks)\n  const data = ctx.getImageData(0, 0, width, height)\n  const shuffledData = shuffleWatermark(data, rng)\n  return shuffledData\n}\n\nexport async function encode(\n  original: ImageData, secret: ImageData,\n  secretKey: string, nWatermark: number, alpha: number,\n  logger: Logger\n): Promise<ImageData> {\n  await logger(0, 'Initializing')\n  secretKey = secretKey.trim()\n  if (secretKey === '') {\n    throw new Error('Secret key cannot be empty')\n  }\n  await logger(5, 'Making watermarks')\n  const rng = new RNG(secretKey)\n  const watermark = makeWatermark(original, secret, rng, nWatermark)\n  await logger(20, 'Calculating the frequency domain of original image')\n  const fftOriginal = fft2Image(original)\n  await logger(40, 'Calculating the frequency domain of watermarks')\n  const fftWatermark = fft2Image(watermark)\n  await logger(60, 'Calculating the frequency domain of encoded image')\n  const mapFunction = (i: number) => (x: number, j: number) => x + fftWatermark[i][j] * alpha\n  const fftEncoded: RGBA = [\n    fftOriginal[0].map(mapFunction(0)),\n    fftOriginal[1].map(mapFunction(1)),\n    fftOriginal[2].map(mapFunction(2)),\n    fftOriginal[3]\n  ]\n  await logger(80, 'Calculating the resulting image')\n  const encoded = ifft2Image(fftEncoded, original.width, original.height)\n  await logger(100, 'Finished!', 'success')\n  return encoded\n}\n\nexport function decodeWatermark(watermark: ImageData, rng: RNG) {\n  const length = Math.floor(watermark.data.length / 4)\n  const shuffleMap = rng.getPermutation(Math.floor(length / 2))\n  const data = new ImageData(watermark.data.slice(), watermark.width, watermark.height)\n  shuffleMap.forEach((v, i) => {\n    for (let k = 0; k < 4; ++k) {\n      data.data[v * 4 + k] = watermark.data[i * 4 + k]\n      data.data[(length - 1 - v) * 4 + k] = watermark.data[(length - 1 - i) * 4 + k]\n    }\n  })\n  return data\n}\n\nexport function getScaled(encoded: HTMLImageElement, original: ImageData): ImageData {\n  const canvas = document.createElement('canvas')\n  const { width, height } = original\n  canvas.width = width\n  canvas.height = height\n  const ctx = canvas.getContext('2d')!\n  ctx.drawImage(encoded, 0, 0, width, height)\n  const scaled = ctx.getImageData(0, 0, width, height)\n  return scaled\n}\n\nexport async function decode(\n  original: ImageData, encoded: HTMLImageElement,\n  secretKey: string, alpha: number,\n  logger: Logger\n): Promise<ImageData> {\n  await logger(0, 'Initializing')\n  secretKey = secretKey.trim()\n  if (secretKey === ''\n  ) {\n    throw new Error('Secret key cannot be empty')\n  }\n  await logger(5, 'Calculating the frequency domain of original image')\n  const fftOriginal = fft2Image(original)\n  await logger(20, 'Scaling the encoded image')\n  const encodedScaled = getScaled(encoded, original)\n  await logger(30, 'Calculating the frequency domain of encoded image')\n  const fftEncoded = fft2Image(encodedScaled)\n  await logger(45, 'Calculating the frequency domain of watermarks')\n  const mapFunction = (i: number) => (x: number, j: number) => (fftEncoded[i][j] - x) / alpha\n  const fftWatermark: RGBA = [\n    fftOriginal[0].map(mapFunction(0)),\n    fftOriginal[1].map(mapFunction(1)),\n    fftOriginal[2].map(mapFunction(2)),\n    fftOriginal[3]\n  ]\n  await logger(60, 'Calculating the watermarks image')\n  const watermark = ifft2Image(fftWatermark, original.width, original.height)\n  await logger(80, 'Calculating the resulting image')\n  const rng = new RNG(secretKey)\n  const decoded = decodeWatermark(watermark, rng)\n  await logger(100, 'Finished!', 'success')\n  return decoded\n}\n","import 'bootstrap/dist/css/bootstrap.min.css'\n\nimport * as React from 'react'\n\nimport './Footer.css'\n\nimport { compareVersion, getCurrentVersion } from './utils'\n\ninterface IFooterState {\n  versionList: string[]\n  currentVersion: string\n}\n\nexport default class Footer extends React.Component<{}, IFooterState> {\n  private onVersionSelectedHandler = this.onVersionSelected.bind(this)\n\n  constructor (props: {}) {\n    super(props)\n    const currentVersion = getCurrentVersion()\n    this.state = {\n      currentVersion,\n      versionList: [\n        'latest',\n        currentVersion\n      ],\n    }\n  }\n\n  private async fetchVersionList() {\n    try {\n      const response = await fetch('/VERSIONS')\n      const content = await response.text()\n      const sorted = content.split('\\n')\n        .filter((x) => x.trim() !== '')\n        .map((x) => x.startsWith('v') ? x.slice(1) : x)\n        .sort(compareVersion)\n      const versionList = sorted.filter((x, i) => i < 2 ||\n        !x.startsWith(sorted[i - 1].split('.').slice(0, -1).join('.'))\n      )\n      this.setState({\n        versionList\n      })\n    } catch {\n      // tslint:disable-next-line:no-console\n      console.warn(\"Unable to fetch the version list.\")\n    }\n  }\n\n  public componentDidMount() {\n    this.fetchVersionList()\n  }\n\n  private onVersionSelected(e: React.ChangeEvent<HTMLSelectElement>) {\n    const version = e.target.value\n    if (e.target && e.target.selectedIndex === 1) {\n      window.location.pathname = '/stable'\n    } else if (version === 'latest') {\n      window.location.pathname = '/latest'\n    } else {\n      window.location.pathname = `/v${version}`\n    }\n  }\n\n  public render() {\n    return <footer className=\"footer mt-auto py-3\">\n      <div className=\"footer-container container\">\n        <div className=\"text-muted footer-block\">By <a href=\"https://vilja.me\">Vilja</a> @ <a href=\"https://github.com/commoon\">Commoon Labs</a>.&nbsp;</div>\n        <div className=\"text-muted footer-block\">Source code on <a href={ process.env.REACT_APP_REPOSITORY! }>GitHub</a>.&nbsp;</div>\n        <div className=\"footer-block\">\n          <span className=\"text-muted\">Version: </span>\n          <select className=\"custom-select custom-select-sm\"\n            value={ this.state.currentVersion } onChange={ this.onVersionSelectedHandler }>\n            { this.state.versionList.map((version, i) => <option key={ i }\n              value={ version }>{ version + (i === 1 ? ' (stable)' : '') }</option>) }\n          </select>\n        </div>\n      </div>\n    </footer>\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css'\n\nimport * as React from 'react'\n\nimport './App.css'\n\nimport { decode, encode, getMaxWatermarks } from './airglow'\nimport { getCurrentVersion, AlertType } from './utils'\n\nimport Footer from './Footer'\n\ninterface IAppFormData {\n  secretKey: string\n  alpha: number\n  nWatermarks: number\n}\n\ninterface IAppState {\n  alertType: AlertType | null\n  formData: IAppFormData\n  images: {\n    encoded: HTMLImageElement | null\n    original: HTMLImageElement | null\n    secret: HTMLImageElement | null\n  }\n  progress: number\n  status: string\n}\n\ntype ImageType = 'original' | 'secret' | 'encoded'\n\nclass App extends React.Component<{}, IAppState> {\n\n  private static clearCanvas(canvas: HTMLCanvasElement) {\n    canvas.width = 10\n    canvas.height = 10\n    const ctx = canvas.getContext('2d')\n    ctx!.clearRect(0, 0, 10, 10)\n  }\n\n  public canvases = {\n    encoded: React.createRef<HTMLCanvasElement>(),\n    original: React.createRef<HTMLCanvasElement>(),\n    secret: React.createRef<HTMLCanvasElement>()\n  }\n\n  public onDismissAlert = this.dismissAlert.bind(this)\n  public onLogger = this.logger.bind(this)\n  public onEncode = this.encode.bind(this)\n  public onDecode = this.decode.bind(this)\n\n  private logging: (() => void) | null = null\n  private isWorking = false\n\n  public constructor(props: {}) {\n    super(props)\n    this.state = {\n      alertType: null,\n      formData: {\n        alpha: 1,\n        nWatermarks: 1,\n        secretKey: ''\n      },\n      images: {\n        encoded: null,\n        original: null,\n        secret: null\n      },\n      progress: 0,\n      status: ''\n    }\n    // @ts-ignore\n    window.app = this\n  }\n\n  public dismissAlert() {\n    this.setState({alertType: null, status: ''})\n  }\n\n  public updateImage(type: ImageType, image: HTMLImageElement | null) {\n    const images = this.state.images\n    images[type] = image\n    this.setState({\n      images\n    })\n  }\n\n  public onChangeFile(type: ImageType) {\n    return (e: React.ChangeEvent<HTMLInputElement>) => {\n      const canvas = this.canvases[type].current\n      if (canvas === null) {\n        return\n      }\n      App.clearCanvas(canvas)\n      const fileInput = e.target as HTMLInputElement\n      const files = fileInput.files\n      if (files === null || files.length < 1) {\n        this.updateImage(type, null)\n        return\n      }\n      const file = files[0]\n      const image = new Image()\n      const reader = new FileReader()\n      image.onload = () => {\n        canvas.width = image.width\n        canvas.height = image.height\n        const ctx = canvas.getContext('2d')\n        ctx!.drawImage(image, 0, 0)\n        this.updateImage(type, image)\n      }\n      reader.onloadend = () => {\n        if (reader.result !== null) {\n          image.src = reader.result.toString()\n        }\n      }\n      reader.readAsDataURL(file)\n      fileInput.value = ''\n    }\n  }\n\n  public logger(progress: number, status: string, alertType: AlertType = 'primary'): Promise<void> {\n    return new Promise<void>(resolve => {\n      this.logging = () => {\n        resolve()\n      }\n      this.setState({\n        alertType,\n        progress,\n        status\n      })\n    })\n  }\n\n  public componentDidUpdate(): void {\n    if (this.logging !== null) {\n      const t = this.logging\n      this.logging = null\n      setTimeout(t, 300)\n    }\n  }\n\n  public onDownload(type: ImageType) {\n    return (e: React.MouseEvent<HTMLButtonElement>) => {\n      e.preventDefault()\n      const canvas = this.canvases[type].current\n      if (canvas  === null) {\n        return\n      }\n      const dataURL = canvas.toDataURL('image/png')\n      const title = `${type}.png`\n      const w = window.open('about:blank', title)!\n      w.document.title = title\n      const img = w.document.createElement('img')\n      img.src = dataURL\n      w.document.body.appendChild(img)\n    }\n  }\n\n  public async encode(e: React.MouseEvent<HTMLButtonElement>) {\n    e.preventDefault()\n    if (this.isWorking) {\n      return\n    }\n    this.isWorking = true\n    const {secretKey, alpha, nWatermarks} = this.state.formData\n    const data: any = {}\n    for (const typeName of ['original', 'secret']) {\n      const type = typeName as ImageType\n      const ctx = this.canvases[type].current!.getContext('2d')!\n      const img = this.state.images[type]\n      if (img === null) {\n        return\n      }\n      data[type] = ctx.getImageData(0, 0, img.width, img.height)\n    }\n    const canvas = this.canvases.encoded.current!\n    App.clearCanvas(canvas)\n    try {\n      const result = await encode(data.original, data.secret, secretKey, nWatermarks, alpha / 100, this.onLogger)\n      canvas.width = result.width\n      canvas.height = result.height\n      const ctx = canvas.getContext('2d')!\n      ctx.putImageData(result, 0, 0)\n      const image = document.createElement('img')\n      image.onload = () => this.updateImage('encoded', image)\n      image.src = canvas.toDataURL('image/png')\n    } catch (e) {\n      this.setState({\n        alertType: 'danger',\n        status: e.message\n      })\n    }\n    this.isWorking = false\n  }\n\n  public async decode(e: React.MouseEvent<HTMLButtonElement>) {\n    e.preventDefault()\n    if (this.isWorking) {\n      return\n    }\n    this.isWorking = true\n    const {alpha, secretKey} = this.state.formData\n    const ctx = this.canvases.original.current!.getContext('2d')!\n    const originalImage = this.state.images.original\n    if (originalImage === null) {\n      return\n    }\n    const original = ctx.getImageData(0, 0, originalImage.width, originalImage.height)\n    const encoded = this.state.images.encoded\n    if (encoded === null) {\n      return\n    }\n    const canvas = this.canvases.secret.current!\n    App.clearCanvas(canvas)\n    try {\n      const result = await decode(original, encoded, secretKey, alpha / 100, this.onLogger)\n      canvas.width = result.width\n      canvas.height = result.height\n      const ctx = canvas.getContext('2d')!\n      ctx.putImageData(result, 0, 0)\n      const image = document.createElement('img')\n      image.onload = () => this.updateImage('secret', image)\n      image.src = canvas.toDataURL('image/png')\n    } catch (e) {\n      this.setState({\n        alertType: 'danger',\n        status: e.message\n      })\n    }\n    this.isWorking = false\n  }\n\n  public render() {\n    const {alertType, formData, images, progress, status} = this.state\n    const encodeDisabled = images.original === null || images.secret === null || formData.secretKey.trim() === ''\n    const decodeDisabled = images.encoded === null || images.original === null || formData.secretKey.trim() === ''\n    const maxWatermarks = getMaxWatermarks(images.original, images.secret)\n    return (<div className=\"App\">\n      <form className=\"airglow-form container-fluid\">\n        <h1>Airglow ({ getCurrentVersion() })</h1>\n        <div className={ 'alert alert-dismissible fade show' + (alertType !== null ? ` alert-${ alertType }` : '') }\n             role=\"alert\" style={ {display: alertType === null ? 'none' : 'block'} }>\n          { status }\n          <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"\n                  onClick={ this.onDismissAlert }>\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div className=\"airglow-progress progress\">\n          <div className=\"progress-bar progress-bar-striped progress-bar-animated\" role=\"progressbar\"\n               style={ {width: `${ progress }%`} }/>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 col-lg-4 container\">\n            <div className=\"form-group\">\n              <div className=\"airglow-canvas-container\">\n                <canvas className=\"airglow-canvas\" width={ 10 } height={ 10 } ref={ this.canvases.secret }/>\n              </div>\n              <div className=\"airglow-file input-group\">\n                <div className=\"input-group-prepend\">\n                  <span className=\"input-group-text\">Secret Image</span>\n                </div>\n                <div className=\"custom-file\">\n                  <input type=\"file\" className=\"custom-file-input\"\n                         onChange={ this.onChangeFile('secret') }/>\n                  <label className=\"custom-file-label\" htmlFor=\"inputGroupSecretImage\">{\n                    images.secret === null ? '' : `${ images.secret.width }*${ images.secret.height }`\n                  }</label>\n                </div>\n              </div>\n            </div>\n            <div className=\"form-group input-group\">\n              <div className=\"input-group-prepend\">\n                <label className=\"input-group-text\" htmlFor=\"forNWatermarks\">Number of Watermarks</label>\n              </div>\n              <input type=\"number\" className=\"form-control\" id=\"forNWatermarks\" min={ 1 } max={ maxWatermarks }\n                     value={ formData.nWatermarks } onChange={ this.onChangeFormData('nWatermarks') }/>\n            </div>\n          </div>\n          <div className=\"col-12 col-lg-4 container\">\n            <div className=\"form-group\">\n              <div className=\"airglow-canvas-container\">\n                <canvas className=\"airglow-canvas\" width={ 10 } height={ 10 } ref={ this.canvases.original }/>\n              </div>\n              <div className=\"airglow-file form-group input-group\">\n                <div className=\"input-group-prepend\">\n                  <span className=\"input-group-text\">Original Image</span>\n                </div>\n                <div className=\"custom-file\">\n                  <input type=\"file\" className=\"custom-file-input\"\n                         onChange={ this.onChangeFile('original') }/>\n                  <label className=\"custom-file-label\" htmlFor=\"inputGroupOriginalImage\">{\n                    images.original === null ? '' : `${ images.original.width }*${ images.original.height }`\n                  }</label>\n                </div>\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <div className=\"input-group\">\n                <div className=\"input-group-prepend\">\n                  <label className=\"input-group-text\" htmlFor=\"formSecretKey\">Secret Key</label>\n                </div>\n                <input type=\"text\" className=\"form-control\" id=\"formSecretKey\"\n                       value={ formData.secretKey } onChange={ this.onChangeFormData('secretKey') }/>\n              </div>\n              <small className=\"form-text text-muted\">\n                A secret key used to encrypt the data.\n              </small>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"forAlpha\">Alpha: { formData.alpha / 100 }</label>\n              <input type=\"range\" className=\"custom-range\" id=\"forAlpha\" min={ 1 } max={ 100 }\n                     value={ formData.alpha } onChange={ this.onChangeFormData('alpha') }/>\n            </div>\n            <div className=\"airglow-buttons form-group\">\n              <button className=\"airglow-button btn btn-primary\"\n                      disabled={ encodeDisabled }\n                      onClick={ this.onEncode }>Encode!\n              </button>\n              <button className=\"airglow-button btn btn-primary\"\n                      disabled={ decodeDisabled }\n                      onClick={ this.onDecode }>Decode!\n              </button>\n            </div>\n          </div>\n          <div className=\"col-12 col-lg-4 container\">\n            <div className=\"form-group\">\n              <div className=\"airglow-canvas-container\">\n                <canvas className=\"airglow-canvas\" width={ 10 } height={ 10 } ref={ this.canvases.encoded }/>\n              </div>\n              <div className=\"airglow-file input-group\">\n                <div className=\"input-group-prepend\">\n                  <span className=\"input-group-text\">Encoded Image</span>\n                </div>\n                <div className=\"custom-file\">\n                  <input type=\"file\" className=\"custom-file-input\"\n                         onChange={ this.onChangeFile('encoded') }/>\n                  <label className=\"custom-file-label\" htmlFor=\"inputGroupEncodedImage\">{\n                    images.encoded === null ? '' : `${ images.encoded.width }*${ images.encoded.height }`\n                  }</label>\n                </div>\n              </div>\n            </div>\n            <div className=\"airglow-buttons form-group\">\n              <button className=\"airglow-button btn btn-primary\"\n                      disabled={ images.encoded === null }\n                      onClick={ this.onDownload('encoded') }>Download\n              </button>\n            </div>\n          </div>\n        </div>\n      </form>\n      <Footer/>\n    </div>)\n  }\n\n  public onChangeFormData(key: keyof IAppFormData) {\n    return (e: React.ChangeEvent<HTMLInputElement>) => {\n      const formData = this.state.formData as any\n      formData[key] = (e.target as HTMLInputElement).value\n      this.setState({\n        formData\n      })\n    }\n  }\n}\n\nexport default App\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.')\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.')\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport registerServiceWorker from './registerServiceWorker'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n)\nregisterServiceWorker()\n"],"sourceRoot":""}